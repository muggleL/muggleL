<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>C&#43;&#43; on Muggle L</title>
    <link>https://blog.mygoooosh.com/categories/c&#43;&#43;/</link>
    <description>Recent content in C&#43;&#43; on Muggle L</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Tue, 30 Jan 2018 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.mygoooosh.com/categories/c++/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>✏️c&#43;&#43;中的get与getline</title>
      <link>https://blog.mygoooosh.com/post/2018/cpp-get-getline/</link>
      <pubDate>Tue, 30 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://blog.mygoooosh.com/post/2018/cpp-get-getline/</guid>
      <description>c++ 中的cin c++中的cin以空白符（空格 回车 制表）作为分隔符，以回车作为输入结束符。在平时使用中除了输入数字，否则很难避免输入的内容包含空格等特殊字符的情况。
char name1[20]; char name2[20]; cin&amp;gt;&amp;gt;name1&amp;gt;&amp;gt;name2; cout&amp;lt;&amp;lt;name1&amp;lt;&amp;lt;endl&amp;lt;&amp;lt;name2&amp;lt;&amp;lt;endl; 如果输入barack obama，再按回车。程序直接输出
barack obama 在此次输入中，把barack赋值给了name1，把obama赋值给了name2；（此时最后输入的回车符任保存在缓存中）。
cin.getline 好在c++给了一个解决这个问题的方法。在cin的成员函数中，有一个以回车为分隔符的函数getline()。
getline()因为是cin的成员函数。所以使用方法为cin.getline()。他有（一般）两个参数，第一个为接收这行字符串的数组的名称，第二个为读取的字符数。
getline()读取某行字符时，会接收最后的回车符，然后把回车符丢弃换成空字符串&#39;\0&#39;，所以如果getline的第二个参数为20，他最多能接收19个字符。
char name1[20]; char name2[20]; cin.getline(name1,20); cin.getline(name2,20); cin.get 与此同时，c++也给出了get()，与getline()不同的是，get不会接收最后的回车符（参数与getline一样）。
char name1[20]; char name2[20]; cin.get(name1,20); cin.get(name2,20); cout&amp;lt;&amp;lt;name1&amp;lt;&amp;lt;name2; 输入barack obama，回车。输出的将是：
barack obama 因为第一个get函数完成后，&#39;\n&#39;被留在了缓存中，当执行第二个get时，程序从缓存中读到了一个\n，所以第二个get没有接收到任何参数就结束了。
为了解决这个问题，get还有一个不带参数的形式，这时只能接收一个字符，所以可以通过下面这种方式，把最后的回车用get丢弃。
char name1[20]; char name2[20]; cin.get(name1,20).get(); cin.get(name2,20).get(); 如果你想保存那个字符，你可以 char a = cin.get();。或者使用get的第三种形式char a; cin.get(a);。
在第一节中说到。cin以回车为输入结束，输入结束后，回车依然留在缓存中。如果你在cin后面紧接着来一个cin.get(string&amp;amp;amp;,int)，你的get可能接收不到任何参数。
所以像上面一样，在cin完之后，应该用一个不带参数的get把回车接收并丢弃掉。
char name1[20],name2[20],a[20]; cin&amp;gt;&amp;gt;a; //or (cin&amp;gt;&amp;gt;a).get();从而不要下面那句。  cin.get() //or char ch; cin.get(ch); 上面之所以能够cin.get(string&amp;amp;amp;,int).get()或(cin&amp;amp;gt;&amp;amp;gt;a).get()，是因为cin在有参数的情况下，返回的是一个cin对象（cin.get()在没有参数的情况下，返回的是接收的字符）。
get与getline 如此看来，貌似getline使用起来比get更加方便，那么get存在的意义是什么？</description>
    </item>
    
  </channel>
</rss>
